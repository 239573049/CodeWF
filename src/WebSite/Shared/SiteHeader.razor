@inject NavigationManager Navigation
@inject AppService AppService

<nav class="topnav navbar navbar-expand-lg navbar-dark bg-primary fixed-top @NavClass">
    <div class="container">
        <Logo/>
        <button class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#navbarColor02" aria-controls="navbarColor02" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse" id="navbarColor02" style="">
            <ul class="navbar-nav mr-auto d-flex align-items-center">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">项目</a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        @foreach (var project in _projects)
                        {
                            <a class="dropdown-item" href="@project.Value" target="_blank">
                                @project.Key
                            </a>
                        }
                    </div>
                </li>
                <li class="nav-item@(IsActive("/doc") ? " active" : "")">
                    <a class="nav-link" href="/doc">文档</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">博客</a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        @if (_categoryItems?.Any() == true)
                        {
                            @foreach (var cat in _categoryItems)
                            {
                                <a class="dropdown-item" href="@ConstantUtil.GetBbsCategoryUrl(cat.Slug)">
                                    @cat.Name
                                </a>
                            }
                        }
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">关于</a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="/donation">赞助</a>
                        <a class="dropdown-item" href="https://www.cnblogs.com/Dotnet9-com" target="_blank">博客园</a>
                        <a class="dropdown-item" href="https://space.bilibili.com/470546606" target="_blank">B站</a>
                        <a class="dropdown-item" href="/about">关于</a>
                    </div>
                </li>
            </ul>
            <ul class="navbar-nav ml-auto d-flex align-items-center">
                <li class="nav-item">
                    <CodeWF.Components.SearchBox />
                </li>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string NavClass => IsIndex ? "index-nav" : DarkNavClass;
    public const string DarkNavClass = "bg-white navbar-light shadow-sm scrollednav";

    private Dictionary<string, string> _projects = new()
    {
        { "CodeWF", "https://github.com/dotnet9/CodeWF" },
        { "CodeWF.EventBus", "https://github.com/dotnet9/CodeWF.EventBus" },
        { "CodeWF.EventBus.Socket", "https://github.com/dotnet9/CodeWF.EventBus.Socket" },
        { "CodeWF.NetWeaver", "https://github.com/dotnet9/CodeWF.NetWeaver" },
        { "CodeWF.Toolbox", "https://github.com/dotnet9/CodeWF.Toolbox" },
        { "CodeWF.Tools", "https://github.com/dotnet9/CodeWF.Tools" },
        { "Assets.Dotnet9", "https://github.com/dotnet9/Assets.Dotnet9" }
    };

    private List<CategoryItem>? _categoryItems;

    [Parameter] public bool IsIndex { get; set; }


    protected override async Task OnInitializedAsync()
    {
        _categoryItems = await AppService.GetAllCategoryItemsAsync();
    }

    private bool IsActive(string code)
    {
        var uri = Navigation.Uri.Replace(Navigation.BaseUri, "/");
        return uri.StartsWith(code);
    }

}