<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<BuiltInComInteropSupport>true</BuiltInComInteropSupport>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<DefineConstants>DEBUG;TRACE</DefineConstants>
		<OutputPath>.\..\Build\ToolsDesktop</OutputPath>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<OutputPath>.\..\Build\ToolsDesktop</OutputPath>
	</PropertyGroup>
	<PropertyGroup>
		<BeautySharedRuntimeMode>False</BeautySharedRuntimeMode>
		<!-- beauty into sub-directory, default is libs, quote with "" if contains space  -->
		<BeautyLibsDir Condition="$(BeautySharedRuntimeMode) == 'True'">../libs</BeautyLibsDir>
		<BeautyLibsDir Condition="$(BeautySharedRuntimeMode) != 'True'">./libs</BeautyLibsDir>
		<!-- dlls that you don't want to be moved or can not be moved -->
		<!-- <BeautyExcludes>dll1.dll;lib*;...</BeautyExcludes> -->
		<!-- dlls that end users never needed, so hide them -->
		<!-- <BeautyHiddens>hostfxr;hostpolicy;*.deps.json;*.runtimeconfig*.json</BeautyHiddens> -->
		<!-- set to True if you want to disable -->
		<DisableBeauty>False</DisableBeauty>
		<!-- set to False if you want to beauty on build -->
		<BeautyOnPublishOnly>False</BeautyOnPublishOnly>
		<!-- DO NOT TOUCH THIS OPTION -->
		<BeautyNoRuntimeInfo>False</BeautyNoRuntimeInfo>
		<!-- set to True if you want to allow 3rd debuggers(like dnSpy) debugs the app -->
		<BeautyEnableDebugging>False</BeautyEnableDebugging>
		<!-- the patch can reduce the file count -->
		<!-- set to False if you want to disable -->
		<!-- SCD Mode Feature Only -->
		<BeautyUsePatch>True</BeautyUsePatch>
		<!-- App Entry Dll = BeautyDir + BeautyAppHostDir + BeautyAppHostEntry -->
		<!-- see https://github.com/nulastudio/NetBeauty2#customize-apphost for more details -->
		<!-- relative path based on AppHostDir -->
		<!-- .NET Core Non Single-File Only -->
		<!-- <BeautyAppHostEntry>bin/MyApp.dll</BeautyAppHostEntry> -->
		<!-- relative path based on BeautyDir -->
		<!-- .NET Core Non Single-File Only -->
		<!-- <BeautyAppHostDir>..</BeautyAppHostDir> -->
		<!-- <BeautyAfterTasks></BeautyAfterTasks> -->
		<!-- valid values: Error|Detail|Info -->
		<BeautyLogLevel>Info</BeautyLogLevel>
		<!-- set to a repo mirror if you have troble in connecting github -->
		<!-- <BeautyGitCDN>https://gitee.com/liesauer/HostFXRPatcher</BeautyGitCDN> -->
		<!-- <BeautyGitTree>master</BeautyGitTree> -->
	</PropertyGroup>
	<ItemGroup>
		<AvaloniaResource Include="Assets\**" />
	</ItemGroup>


	<ItemGroup>
		<PackageReference Include="Avalonia" Version="11.0.10" />
		<PackageReference Include="Avalonia.Desktop" Version="11.0.10" />
		<PackageReference Include="Avalonia.Fonts.Inter" Version="11.0.10" />
		<!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
		<PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.0.10" />
		<PackageReference Include="Avalonia.ReactiveUI" Version="11.0.10" />
		<PackageReference Include="Irihi.Ursa" Version="0.3.0-beta20240226" />
		<PackageReference Include="Irihi.Ursa.Themes.Semi" Version="0.3.0-beta20240226" />
		<PackageReference Include="nulastudio.NetCoreBeauty" Version="1.2.9.5" />
		<PackageReference Include="Prism.Avalonia" Version="8.1.97.11072" />
		<PackageReference Include="Prism.DryIoc.Avalonia" Version="8.1.97.11072" />
		<PackageReference Include="Semi.Avalonia" Version="11.0.7" />
	</ItemGroup>


	<ItemGroup>
		<ProjectReference Include="..\CodeWF.AppInfo\CodeWF.AppInfo.csproj" />
		<ProjectReference Include="..\CodeWF.Tools.Common\CodeWF.Tools.Common.csproj" />
		<ProjectReference Include="..\CodeWF.Tools.Core\CodeWF.Tools.Core.csproj" />
		<ProjectReference Include="..\CodeWF.Tools.IServices\CodeWF.Tools.IServices.csproj" />
		<ProjectReference Include="..\CodeWF.Tools.Prism\CodeWF.Tools.Prism.csproj" />
		<ProjectReference Include="..\CodeWF.Utils\CodeWF.Utils.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Views\DashboardView.axaml.cs">
			<DependentUpon>DashboardView.axaml</DependentUpon>
		</Compile>
		<Compile Update="Views\FooterView.axaml.cs">
			<DependentUpon>%(Filename)</DependentUpon>
		</Compile>
	</ItemGroup>
</Project>